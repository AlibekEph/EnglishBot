FROM python:3.10-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies including build tools
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /app

# Copy dependency files
COPY requirements.txt .

# Create a minimal requirements file by excluding packages that need compilation
# RUN grep -v "sentencepiece==" requirements.txt | \
#     grep -v "llama-cpp-python==" | \
#     grep -v "ctransformers==" | \
#     grep -v "torch==" | \
#     grep -v "tokenizers==" | \
#     grep -v "transformers==" | \
#     grep -v "accelerate==" > requirements_minimal.txt

# Install minimal Alpine build tools
#RUN apk add --no-cache --virtual .build-deps gcc musl-dev

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Create directory for models
RUN mkdir -p /app/models

# Copy source code
COPY local_llm_server.py .

# Add a stub for handling LLM calls
#RUN echo 'print("Warning: Running in minimal mode, LLM features disabled")' >> stub_llm.py

# Expose port
EXPOSE 8000

# Keep container running with tail -f /dev/null
#CMD ["tail", "-f", "/dev/null"]
CMD ["python", "local_llm_server.py"]